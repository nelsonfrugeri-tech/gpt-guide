Software Architecture Quatro pilares para se definir uma arquitetura de software são: Estilo Arquitetural (Estrutura) Características Arquiteturais Decisões Arquiteturais Princípios de Design Estilo Arquitetural (Estrutura) O estilo arquitetural refere-se a como o sistema é implementado, por exemplo, micro-serviços, monolítico, em camadas, cliente-servidor, data-centric, event-driven, component-based, etc. Características Arquiteturais As características são entendidas como os requisitos não funcionais do sistema, essas são as chamadas "ilities" (em inglês): availability, reliability, testability, scalability, security, agility, fault tolerance, elasticity, recoverability, performance, deployability, learnability. Decisões Arquiteturais As decisões arquiteturais são as restrições nas quais o software irá possuir, por exemplo o tipo de comunicação que será feito entre os componentes do sistema, assim, pode-ser haver a restrição em que o componente de apresentação não pode se comunicar diretamente com o componente de dados; outro exemplo prático interessante é referente a arquitetura em camadas, limpa ou hexagonal, no qual a responsabilidade de conhecimento do componente é feita de fora para dentro, ou seja, o componente interior (por exemplo a Business), não conhece o componente exterior (banco de dados). Princípios de Design São as guidelines e boas práticas nas quais devem ser seguidas durante o desenvolvimento do software, por exemplo, um princípio de design é que a comunicação de um determinado serviço, por ter a característica de alta performance, deve implementar o princípio da concorrência, outro serviço, por exemplo, por realizar muitas chamadas para retornar ao seus clientes, deve implementar as chamadas de maneira assíncrona (não bloqueante) e paralela para obter mais performance na resposta. As oito principais características de um arquiteto de software Tome decisões arquiteturais Continuamente faça análise da arquitetura Mantenha-se atualizado com as últimas tendências Assegure conformidade com as decisões Busque opiniões adversas e contrárias Tenha conhecimento e domínio do negócio Possua habilidades interpessoais Entenda e navegue pelas políticas Tome decisões arquiteturais Basicamente, espera-se que um arquiteto de software tome decisões arquiteturais e defina os princípios de design usados para guiar os padrões de tecnologia para o time, o departamento, ou entre a companhia. Um arquiteto de software deve guiar ao invés de especificar a escolha da tecnologia, aqui, guia é a palavra chave para o sucesso de boa decisões e definições. Por exemplo, ao invés de definir que o time de front-end use React.js para o desenvolvimento do front-end, o arquiteto deve instruir que o time use um reactive-based framework para o desenvolvimento no front-end web. Com isso o time pode, com o apoio e auxílio do arquiteto, chegarem a melhor escolha para o time em qual framework utilizar, seja Angular, Elm, Vue, React.js ou qualquer outro reactive-based web framework para o desenvolvimento front-end. Orientar as escolhas de tecnologia por meio de decisões de arquitetura e princípios de design é um processo difícil, a chave para tomar decisões arquitetônicas eficazes é perguntar se as decisões de arquitetura estão ajudando a orientar as equipes na tomada da escolha técnica certa ou se as decisões de arquitetura fazem a escolha técnicas pelo time. Contudo, isso não significa que em determinados momentos o arquiteto não precise tomar decisões para especificar tecnologia, por exemplo, no caso no qual é necessário se resolver um problema de escalabilidade, performance, disponibilidade, etc. Arquitetos de software frequentemente encontram-se no paradoxo para encontrar a linha correta, entre guiar o time nas decisões de tecnologia e definitivamente ter que tomar a decisão final. Continuamente faça análise da arquitetura De um arquiteto é esperado que continuamente faça a análise da arquitetura e do ambiente da tecnologia atual para então recomendar melhorias nas soluções. Um arquiteto deve analisar holisticamente as mudanças nas tecnologias e domínios de problemas para determinar que haja mudanças sólidas na arquitetura, visto que, esse processo deve ser continuamente aplicado para que o software se mantenha sempre relevante frente às mudanças tecnologias e de negócio. Mantenha-se atualizado com as últimas tendências De um arquiteto é esperado que continuamente esteja atualizado com as últimas tecnologias e tendências do mercado, visto que, as decisões arquiteturais tendem a ser de longo prazo e mais duradouras, portanto, é necessário que o arquiteto de software esteja sempre acompanhando a indústria e as tendências de tecnologia para que faça boas decisões a partir do seu conhecimento atualizado. Assegurar conformidade com as decisões Assegurar a conformidade significa que o arquiteto deve continuamente verificar se o time de desenvolvimento está seguindo as definições de arquitetura, bem como os princípios de design. Documentação e comunicação são as ferramentas chaves para que o arquiteto tenha sucesso em assegurar a conformidade com as definições. Experiência e exposição diversa De um arquiteto é esperado que tenha exposição a múltiplas e diversas tecnologias, frameworks, plataformas e ambientes. Do ponto de vista de abrangência tecnológica, é importante que o arquiteto seja mais generalista, ao invés de especialista, ou seja, é mais viável que o arquiteto conheça 10 bancos de dados NoSQL, sabendo suas vantagens e desvantagens, de maneira mais abrangente, ao invés de conhecer apenas 1 em profundidade.