GuideLine Engenharia de Software Princípios, padronizações e melhores práticas são métodos utilizados para entrega de software de alta qualidade e agilidade, pois as pessoas que fazem parte do time sempre se orientam e se baseiam nos mesmos conceitos, o que lhes dá poder para focar no que realmente importa: criar as melhores soluções para os clientes, no tempo certo e com baixo custo. Outra grande vantagem dessa documentação é referente ao momento em que o time cresce, visto que haverá uma fonte única para consulta das diretrizes de Engenharia de Software, fazendo com que haja disseminação de conhecimento e unificação da cultura técnica entre as pessoas, o que reflete na integridade conceitual dos sistemas. Qualidade de Software A qualidade do software deve ser assegurada pelo time de desenvolvimento que deve presar pelos testes unitários em primeira instância, código limpo e bem organizado segundo o code style definido para padronização do código, bem como é de fundamental importância a aplicação de padrões de projetos e conceitos fundamentais, como por exemplo o SOLID para os paradigmas de orientação a objetos. Code Style O code style tem por objetivo padronizar a formatação do código e deve ser utilizado conforme documentação abaixo: https://google.github.io/styleguide/csharp-style.html Teste Driven Development É de suma importância que o teste seja feito junto ao desenvolvimento das regras de negócio, sendo fundamental que os cenários ora definidos durante o refinamento sejam previamente implementados na forma de testes unitários para cobertura de um código de qualidade. Recomendações para a escrita dos testes Para cada cenário de teste escrito na User Story, escreva um teste unitário É importante que o nome do método de teste seja claro e explicito de acordo com o cenário a ser testado Nunca mock uma dependência interna da aplicação Sonarqube para Cobertura de Qualidade e Segurança de código O Sonarqube é executado a cada commit enviado ao repositório remoto pela esteira contínua para que haja um feedback rápido em relação a qualidade e segurança do código, uma dica importante é a utilização do Sonarqube localmente (através de uma imagem Docker), para o feedback seja mais rápido e a correção seja feita antes do envio do commit.